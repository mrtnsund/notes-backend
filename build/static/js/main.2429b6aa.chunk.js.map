{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","document","getElementById"],"mappings":"iNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCWjC,EAhBA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH5BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAe,OAAZA,EACQ,KAGP,yBAAKb,UAAU,SACVa,ICmGEC,EArGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMfC,qBAAU,WACPC,IAECpB,MAAK,SAAAqB,GACJT,EAASS,QAEb,IAGF,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAhC,GAAI,OAAIA,EAAKG,aA4DhE,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAcc,QAASS,IAEvB,6BACE,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BAlDeO,EAAYE,KAAI,SAAAjC,GAAI,OACrC,kBAAC,EAAD,CACEkC,IAAKlC,EAAKc,GACVd,KAAMA,EACNC,iBAAkB,kBAvBK,SAAAa,GACzB,IAAMd,EAAOoB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAW,eAAQrC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD0B,EACUf,EAAGuB,GACV5B,MAAK,SAAA6B,GACNjB,EAASD,EAAMa,KAAI,SAAAjC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOsC,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGfoC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAGA,EAAEtB,KAAOA,SAOX4B,CAAmB1C,EAAKc,WAiDhD,0BAAM6B,SA7CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASiB,EACTyB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAE7BtB,EACUiB,GACPrC,MAAK,SAAA6B,GACJjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,SAmCX,2BACE8B,MAAO/B,EACPgC,SAjCiB,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOF,UAkCpB,4BAAQG,KAAK,UAAb,SAEF,mBAlCW,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,wGAyBF,Q,MC/FNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2429b6aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ( {note, toggleImportance} ) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n            {note.content}  \r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n        \r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n  \r\n}\r\n\r\nexport default { getAll,create,update }","import React from 'react'\r\nconst Notification = ({ message }) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {  \r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n   useEffect(() => {\r\n      noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  },[])\r\n\r\n  \r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id,changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      setNotes(notes.filter(n=> n.id !== id))\r\n    })\r\n  }\r\n  const rows = () => notesToShow.map(note =>\r\n    <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n  const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={errorMessage} />\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}